version: '3'
services: 
  mongo:
    container_name: database
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db/data/db:/data/db
      - ./db/data/init/:/tmp/data/
      - ./db/scripts/:/docker-entrypoint-initdb.d/
    ports:
      - 27017:27017

  mongo_express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo

  chain_1:
    image: chain/chain_1
    build:
      context: chain_1
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 3001
      CHAIN_NEXT_ADDRESS: chain_2:3002
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: chain
    ports:
      - 3001:3001
    restart: always
    depends_on:
      - mongo
  chain_2:
    image: chain/chain_2
    build:
      context: chain_2
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 3002
      CHAIN_NEXT_ADDRESS: chain_3:3003
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: chain
    ports:
      - 3002:3002
    restart: always
    depends_on:
      - mongo
  chain_3:
    image: chain/chain_3
    build:
      context: chain_3
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 3003
      CHAIN_NEXT_ADDRESS: chain_4:3004
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: chain
    ports:
      - 3003:3003
    restart: always
    depends_on:
      - mongo
  chain_4:
    image: chain/chain_4
    build:
      context: chain_4
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 3004
      CHAIN_NEXT_ADDRESS: chain_5:3005
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: chain
    ports:
      - 3004:3004
    restart: always
    depends_on:
      - mongo

