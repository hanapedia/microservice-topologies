version: '3'
services: 
{% for i in range(1, count | int + 1) %}
  fanout_{{ i }}_db:
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db/fanout_{{ i }}/data:/data/db
      - ./db/fanout_{{ i }}/scripts/:/docker-entrypoint-initdb.d/
    ports:
      - {{ base_db_port + i | int }}:27017

  fanout_{{ i }}_mongo_express:
    image: mongo-express
    restart: always
    ports:
      - {{ 8081 + i | int }}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: fanout_{{ i }}_db
    depends_on:
      - fanout_{{ i }}_db

  fanout_{{ i }}:
    image: {{ name }}/fanout_{{ i }}
    build:
      context: fanout_{{ i }}
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: {{ base_service_port }}
      DB_ADDRESS: mongodb://fanout_{{ i }}_db:27017
      DB_NAME: {{ name }}
      COLLECTION_NAME: {{ type }}{{ i }}
    ports:
      - {{ i | int + base_service_port | int + 1 }}:{{ base_service_port }}
    restart: always
    depends_on:
      - fanout_{{ i }}_db

{% endfor %}
  gateway:
    image: {{ name }}/gateway
    build:
      context: gateway
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: {{ base_service_port }}
{% for i in range(1, count | int + 1) %}
      FANOUT_CLIENT_{{ i }}_ADDRESS: fanout_{{ i }}:{{ base_service_port }}
{% endfor %}
    ports:
      - {{ base_service_port }}:{{ base_service_port }}
    restart: always
    depends_on: 
{% for i in range(1, count | int + 1) %}
      - fanout_{{ i }}
{% endfor %}
