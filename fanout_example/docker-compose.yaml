version: '3'
services: 
  mongo:
    container_name: fanout_example_db
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db/data/db:/data/db
      - ./db/scripts/:/docker-entrypoint-initdb.d/
    ports:
      - 27017:27017

  mongo_express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo

  fanout_0:
    image: fanout_example/fanout_0
    build:
      context: fanout_0
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 4001
      FANOUT_CLIENT_1_ADDRESS: fanout_1:4002
      FANOUT_CLIENT_2_ADDRESS: fanout_2:4003
      FANOUT_CLIENT_3_ADDRESS: fanout_3:4004
    ports:
      - 4001:4001
    restart: always
    
  fanout_1:
    image: fanout_example/fanout_1
    build:
      context: fanout_1
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 4002
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: fanout_example
    ports:
      - 4002:4002
    restart: always
    depends_on:
      - mongo
  fanout_2:
    image: fanout_example/fanout_2
    build:
      context: fanout_2
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 4003
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: fanout_example
    ports:
      - 4003:4003
    restart: always
    depends_on:
      - mongo
  fanout_3:
    image: fanout_example/fanout_3
    build:
      context: fanout_3
      dockerfile: ../go.Dockerfile
    environment:
      LISTEN_PORT: 4004
      DB_ADDRESS: mongodb://mongo:27017
      DB_NAME: fanout_example
    ports:
      - 4004:4004
    restart: always
    depends_on:
      - mongo

